{"ast":null,"code":"import _classCallCheck from \"/Users/datascience/belcorp/repo-pro-12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/datascience/belcorp/repo-pro-12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/datascience/belcorp/repo-pro-12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/datascience/belcorp/repo-pro-12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/datascience/belcorp/repo-pro-12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/datascience/belcorp/repo-pro-12/src/components/showDescriptors.js\";\nimport React, { Component } from 'react';\nimport './stye_description.css';\n\nfunction range(start, end) {\n  var ans = [];\n\n  for (var i = start; i <= end; i++) {\n    ans.push(i);\n  }\n\n  return ans;\n}\n\nvar ShowDescriptors =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowDescriptors, _Component);\n\n  function ShowDescriptors(_props) {\n    var _this;\n\n    _classCallCheck(this, ShowDescriptors);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ShowDescriptors).call(this, _props));\n\n    _this.update = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      var fullDesc = props.fullDesc;\n\n      if (!!fullDesc) {\n        _this.setState({\n          descriptors: fullDesc.map(function (fd) {\n            return fd.descriptor;\n          }),\n          names: range(0, fullDesc.length - 1)\n        });\n      }\n    };\n\n    _this.toggleModal = function () {\n      _this.setState({\n        isOpen: false\n      });\n    };\n\n    _this.state = {\n      descriptors: [],\n      names: [],\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(ShowDescriptors, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.update();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.update(newProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var descriptors = this.state.descriptors;\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Detail Descriptions\"), React.createElement(\"div\", {\n        id: \"overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"loader\",\n        id: \"laoder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"myModal\",\n        class: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"close\",\n        onClick: function onClick() {\n          return _this2.closeModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"\\xD7\"), React.createElement(\"p\", {\n        id: \"msje\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), !!descriptors ? descriptors.map(function (descriptor, i) {\n        return React.createElement(\"form\", {\n          key: i,\n          style: {\n            padding: 10,\n            margin: 20,\n            wordBreak: 'break-all',\n            borderStyle: 'solid',\n            borderColor: 'blue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          name: \"tag\",\n          type: \"text\",\n          id: i,\n          placeholder: i,\n          ref: function ref(c) {\n            return _this2.title = c;\n          },\n          onChange: function onChange() {\n            return _this2.fixName(i);\n          },\n          onClick: function onClick() {\n            return _this2.fixName(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"button\",\n          onClick: function onClick() {\n            return _this2.onSubmit(i, descriptor);\n          },\n          className: \"btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"A\\xF1adir registro\"), React.createElement(\"div\", {\n          ref: function ref(dd) {\n            return _this2.descrip = dd;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, descriptor));\n      }) : null);\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(i, descriptor) {\n      var result = Object.keys(descriptor).map(function (key) {\n        return descriptor[key];\n      });\n      var res = {\n        method: 'POST',\n        body: JSON.stringify({\n          'name': this.state.names[i],\n          'descriptor': result\n        }),\n        headers: new Headers({\n          'Content-type': 'application/json'\n        })\n      }; // Muestro loading\n\n      var overlay1 = document.getElementById(\"overlay\");\n      overlay1.style.display = \"block\"; // Limpio el mensaje de salida\n\n      var mymodal = document.getElementById(\"myModal\");\n      var msje = document.getElementById(\"msje\"); //msje.innerHTML = ''\n\n      mymodal.style.display = \"none\"; // Inicio POST\n\n      fetch('https://hrws8ne1hk.execute-api.us-east-1.amazonaws.com/dev/v1/struct', res).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        if (result.status == 'error') {\n          var error = result.message;\n          overlay1.style.display = \"none\";\n          console.log(\"error: \", typeof error, String(error));\n          msje.style.color = \"red\";\n          msje.innerHTML = 'Error:, ' + String(error);\n          mymodal.style.display = \"block\";\n        } else {\n          overlay1.style.display = \"none\";\n          console.log(\"//////////// result:\", result);\n          msje.style.color = \"green\";\n          msje.innerHTML = 'Registro satisfactorio: ' + JSON.stringify(result);\n          mymodal.style.display = \"block\";\n        }\n      }).catch(function (error) {\n        overlay1.style.display = \"none\";\n        console.log(\"error: \", typeof error, String(error));\n        msje.style.color = \"red\";\n        msje.innerHTML = 'Error de conexion, ' + String(error);\n        mymodal.style.display = \"block\";\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      var mymodal = document.getElementById(\"myModal\");\n      mymodal.style.display = \"none\";\n      window.location.reload();\n    }\n  }, {\n    key: \"fixName\",\n    value: function fixName(i) {\n      var name = document.getElementById(i).value;\n      this.state.names[i] = name;\n    }\n  }]);\n\n  return ShowDescriptors;\n}(Component);\n\nexport default ShowDescriptors;","map":{"version":3,"sources":["/Users/datascience/belcorp/repo-pro-12/src/components/showDescriptors.js"],"names":["React","Component","range","start","end","ans","i","push","ShowDescriptors","props","update","fullDesc","setState","descriptors","map","fd","descriptor","names","length","toggleModal","isOpen","state","newProps","display","flexDirection","alignContent","alignItems","closeModal","padding","margin","wordBreak","borderStyle","borderColor","c","title","fixName","onSubmit","dd","descrip","result","Object","keys","key","res","method","body","JSON","stringify","headers","Headers","overlay1","document","getElementById","style","mymodal","msje","fetch","then","json","status","error","message","console","log","String","color","innerHTML","catch","window","location","reload","name","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './stye_description.css';\n\nfunction range(start, end) {\n    var ans = [];\n    for (let i = start; i <= end; i++) {\n        ans.push(i);\n    }\n    return ans;\n}\n\nclass ShowDescriptors extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      descriptors: [],\n      names: [],\n      isOpen: false\n    };\n  }\n  \n  componentWillMount() {\n    this.update();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.update(newProps);\n  }\n\n  update = (props = this.props) => {\n    let { fullDesc } = props;\n\n    if (!!fullDesc) {\n      this.setState({\n        descriptors: fullDesc.map(fd => fd.descriptor),\n        names: range(0, fullDesc.length -1)\n      });\n    }\n  };\n\n  toggleModal = () => {\n    this.setState({\n      isOpen: false\n    });\n  }\n  \n  render() {\n    const { descriptors } = this.state;\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <h3>Detail Descriptions</h3>\n        \n        <div id=\"overlay\">\n           <div class=\"loader\"id=\"laoder\">\n           </div>\n        </div>\n\n        <div id=\"myModal\" class=\"modal\">\n        <div class=\"modal-content\">\n          <span class=\"close\" onClick={() => this.closeModal()}>&times;</span>\n          <p id='msje'></p>\n        </div>\n\n      </div>\n\n        {!!descriptors\n          ? descriptors.map((descriptor, i) => (\n              <form\n                key={i}\n                style={{\n                  padding: 10,\n                  margin: 20,\n                  wordBreak: 'break-all',\n                  borderStyle: 'solid',\n                  borderColor: 'blue'\n                }}\n              >\n                <input name=\"tag\"\n                type=\"text\"\n                id={i}\n                placeholder={i}\n                ref={(c) => this.title = c}\n                onChange={() => this.fixName(i)}\n                onClick={() => this.fixName(i)}\n                />\n\n                <button type=\"button\"\n                 onClick={() => this.onSubmit(i, descriptor)}\n                 className=\"btn\">\n                 Añadir registro\n                </button>\n\n                <div\n                ref={(dd) => this.descrip = dd}\n                >{descriptor}</div>\n              </form>\n            ))\n          : null}\n      </div>\n    );\n  }\n  onSubmit(i, descriptor) {\n    var result = Object.keys(descriptor).map(function(key) {\n      return descriptor[key];\n    });\n\n    const res = {\n       method: 'POST',\n       body: JSON.stringify({\n        'name': this.state.names[i],\n        'descriptor': result\n       }),\n       headers: new Headers({\n         'Content-type': 'application/json'\n       }),\n     };\n\n     // Muestro loading\n     var overlay1 = document.getElementById(\"overlay\")\n     overlay1.style.display = \"block\";\n\n     // Limpio el mensaje de salida\n     var mymodal = document.getElementById(\"myModal\")\n     var msje = document.getElementById(\"msje\")\n     //msje.innerHTML = ''\n     mymodal.style.display = \"none\";\n\n     // Inicio POST\n     fetch('https://hrws8ne1hk.execute-api.us-east-1.amazonaws.com/dev/v1/struct', res).then(res => res.json())\n     .then(result => {\n        if(result.status == 'error'){\n          var error = result.message\n          overlay1.style.display = \"none\";\n          console.log(\"error: \", typeof(error), String(error));\n          msje.style.color = \"red\";\n          msje.innerHTML = 'Error:, ' + String(error)\n          mymodal.style.display = \"block\";\n        }else{\n          overlay1.style.display = \"none\";\n          console.log(\"//////////// result:\", result);\n          msje.style.color = \"green\";\n          msje.innerHTML = 'Registro satisfactorio: ' + JSON.stringify(result)\n          mymodal.style.display = \"block\";\n      }\n     }).catch(function(error) {\n        overlay1.style.display = \"none\";\n        console.log(\"error: \", typeof(error), String(error));\n        msje.style.color = \"red\";\n        msje.innerHTML = 'Error de conexion, ' + String(error)\n        mymodal.style.display = \"block\";\n    });\n\n  };\n\n  closeModal(){\n    var mymodal = document.getElementById(\"myModal\")\n    mymodal.style.display = \"none\";\n    window.location.reload();\n  };\n\n  fixName(i) {\n    var name = document.getElementById(i).value\n    this.state.names[i] = name\n  }\n\n}\n\nexport default ShowDescriptors;\n"]},"metadata":{},"sourceType":"module"}