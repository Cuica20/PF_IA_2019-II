{"ast":null,"code":"import _regeneratorRuntime from \"/Users/datascience/belcorp/repo-pro-12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/datascience/belcorp/repo-pro-12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as faceapi from 'face-api.js';\nvar maxDescriptorDistance = 0.5;\nexport function loadModels() {\n  return _loadModels.apply(this, arguments);\n}\n\nfunction _loadModels() {\n  _loadModels = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var MODEL_URL;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            MODEL_URL = process.env.PUBLIC_URL + '/models';\n            _context.next = 3;\n            return faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n\n          case 3:\n            _context.next = 5;\n            return faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n\n          case 5:\n            _context.next = 7;\n            return faceapi.loadFaceRecognitionModel(MODEL_URL);\n\n          case 7:\n            _context.next = 9;\n            return faceapi.loadAgeGenderModel(MODEL_URL);\n\n          case 9:\n            _context.next = 11;\n            return faceapi.loadFaceExpressionModel(MODEL_URL);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadModels.apply(this, arguments);\n}\n\nexport function getFullFaceDescription(_x) {\n  return _getFullFaceDescription.apply(this, arguments);\n}\n\nfunction _getFullFaceDescription() {\n  _getFullFaceDescription = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(blob) {\n    var inputSize,\n        scoreThreshold,\n        OPTION,\n        useTinyModel,\n        img,\n        fullDesc,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            inputSize = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 512;\n            // tiny_face_detector options\n            scoreThreshold = 0.5;\n            OPTION = new faceapi.TinyFaceDetectorOptions({\n              inputSize: inputSize,\n              scoreThreshold: scoreThreshold\n            });\n            useTinyModel = true; // fetch image to api\n\n            _context2.next = 6;\n            return faceapi.fetchImage(blob);\n\n          case 6:\n            img = _context2.sent;\n            _context2.next = 9;\n            return faceapi.detectAllFaces(img, OPTION).withFaceLandmarks(useTinyModel).withFaceDescriptors();\n\n          case 9:\n            fullDesc = _context2.sent;\n            return _context2.abrupt(\"return\", fullDesc);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getFullFaceDescription.apply(this, arguments);\n}\n\nexport function createMatcher(_x2) {\n  return _createMatcher.apply(this, arguments);\n}\n\nfunction _createMatcher() {\n  _createMatcher = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(faceProfile) {\n    var members, labeledDescriptors, faceMatcher;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // Create labeled descriptors of member from profile\n            members = Object.keys(faceProfile);\n            labeledDescriptors = members.map(function (member) {\n              return new faceapi.LabeledFaceDescriptors(faceProfile[member].name, faceProfile[member].descriptors.map(function (descriptor) {\n                return new Float32Array(descriptor);\n              }));\n            }); // Create face matcher (maximum descriptor distance is 0.5)\n\n            faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, maxDescriptorDistance);\n            return _context3.abrupt(\"return\", faceMatcher);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _createMatcher.apply(this, arguments);\n}\n\nexport function isFaceDetectionModelLoaded() {\n  return !!faceapi.nets.tinyFaceDetector.params;\n}","map":{"version":3,"sources":["/Users/datascience/belcorp/repo-pro-12/src/api/face.js"],"names":["faceapi","maxDescriptorDistance","loadModels","MODEL_URL","process","env","PUBLIC_URL","loadTinyFaceDetectorModel","loadFaceLandmarkTinyModel","loadFaceRecognitionModel","loadAgeGenderModel","loadFaceExpressionModel","getFullFaceDescription","blob","inputSize","scoreThreshold","OPTION","TinyFaceDetectorOptions","useTinyModel","fetchImage","img","detectAllFaces","withFaceLandmarks","withFaceDescriptors","fullDesc","createMatcher","faceProfile","members","Object","keys","labeledDescriptors","map","member","LabeledFaceDescriptors","name","descriptors","descriptor","Float32Array","faceMatcher","FaceMatcher","isFaceDetectionModelLoaded","nets","tinyFaceDetector","params"],"mappings":";;AAAA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;AAEA,IAAMC,qBAAqB,GAAG,GAA9B;AAEA,gBAAsBC,UAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,SADD,GACaC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,SADtC;AAAA;AAAA,mBAECN,OAAO,CAACO,yBAAR,CAAkCJ,SAAlC,CAFD;;AAAA;AAAA;AAAA,mBAGCH,OAAO,CAACQ,yBAAR,CAAkCL,SAAlC,CAHD;;AAAA;AAAA;AAAA,mBAICH,OAAO,CAACS,wBAAR,CAAiCN,SAAjC,CAJD;;AAAA;AAAA;AAAA,mBAKCH,OAAO,CAACU,kBAAR,CAA2BP,SAA3B,CALD;;AAAA;AAAA;AAAA,mBAMCH,OAAO,CAACW,uBAAR,CAAgCR,SAAhC,CAND;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASP,gBAAsBS,sBAAtB;AAAA;AAAA;;;;;2BAAO,kBAAsCC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4CC,YAAAA,SAA5C,8DAAwD,GAAxD;AACL;AACIC,YAAAA,cAFC,GAEgB,GAFhB;AAGCC,YAAAA,MAHD,GAGU,IAAIhB,OAAO,CAACiB,uBAAZ,CAAoC;AACjDH,cAAAA,SAAS,EAATA,SADiD;AAEjDC,cAAAA,cAAc,EAAdA;AAFiD,aAApC,CAHV;AAOCG,YAAAA,YAPD,GAOgB,IAPhB,EASL;;AATK;AAAA,mBAUWlB,OAAO,CAACmB,UAAR,CAAmBN,IAAnB,CAVX;;AAAA;AAUDO,YAAAA,GAVC;AAAA;AAAA,mBAcgBpB,OAAO,CACzBqB,cADkB,CACHD,GADG,EACEJ,MADF,EAElBM,iBAFkB,CAEAJ,YAFA,EAGlBK,mBAHkB,EAdhB;;AAAA;AAcDC,YAAAA,QAdC;AAAA,8CAkBEA,QAlBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBP,gBAAsBC,aAAtB;AAAA;AAAA;;;;;2BAAO,kBAA6BC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;AACIC,YAAAA,OAFC,GAESC,MAAM,CAACC,IAAP,CAAYH,WAAZ,CAFT;AAGDI,YAAAA,kBAHC,GAGoBH,OAAO,CAACI,GAAR,CACvB,UAAAC,MAAM;AAAA,qBACJ,IAAIhC,OAAO,CAACiC,sBAAZ,CACEP,WAAW,CAACM,MAAD,CAAX,CAAoBE,IADtB,EAEER,WAAW,CAACM,MAAD,CAAX,CAAoBG,WAApB,CAAgCJ,GAAhC,CACE,UAAAK,UAAU;AAAA,uBAAI,IAAIC,YAAJ,CAAiBD,UAAjB,CAAJ;AAAA,eADZ,CAFF,CADI;AAAA,aADiB,CAHpB,EAaL;;AACIE,YAAAA,WAdC,GAca,IAAItC,OAAO,CAACuC,WAAZ,CAChBT,kBADgB,EAEhB7B,qBAFgB,CAdb;AAAA,8CAkBEqC,WAlBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBP,OAAO,SAASE,0BAAT,GAAsC;AAC3C,SAAO,CAAC,CAACxC,OAAO,CAACyC,IAAR,CAAaC,gBAAb,CAA8BC,MAAvC;AACD","sourcesContent":["import * as faceapi from 'face-api.js';\n\nconst maxDescriptorDistance = 0.5;\n\nexport async function loadModels() {\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\n  await faceapi.loadAgeGenderModel(MODEL_URL);\n  await faceapi.loadFaceExpressionModel(MODEL_URL);\n}\n\nexport async function getFullFaceDescription(blob, inputSize = 512) {\n  // tiny_face_detector options\n  let scoreThreshold = 0.5;\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\n    inputSize,\n    scoreThreshold\n  });\n  const useTinyModel = true;\n\n  // fetch image to api\n  let img = await faceapi.fetchImage(blob);\n\n  // detect all faces and generate full description from image\n  // including landmark and descriptor of each face\n  let fullDesc = await faceapi\n    .detectAllFaces(img, OPTION)\n    .withFaceLandmarks(useTinyModel)\n    .withFaceDescriptors();\n  return fullDesc;\n}\n\nexport async function createMatcher(faceProfile) {\n  // Create labeled descriptors of member from profile\n  let members = Object.keys(faceProfile);\n  let labeledDescriptors = members.map(\n    member =>\n      new faceapi.LabeledFaceDescriptors(\n        faceProfile[member].name,\n        faceProfile[member].descriptors.map(\n          descriptor => new Float32Array(descriptor)\n        )\n      )\n  );\n\n  // Create face matcher (maximum descriptor distance is 0.5)\n  let faceMatcher = new faceapi.FaceMatcher(\n    labeledDescriptors,\n    maxDescriptorDistance\n  );\n  return faceMatcher;\n}\n\nexport function isFaceDetectionModelLoaded() {\n  return !!faceapi.nets.tinyFaceDetector.params;\n}\n"]},"metadata":{},"sourceType":"module"}